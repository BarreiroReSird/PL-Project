
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AS ASTERISK BEGIN CALL COMMA CREATE DISCARD DOT END EQ EQUALS EXPORT FROM GE GT ID IMPORT JOIN LE LIMIT LT NE NUMBER ON PRINT PROCEDURE RENAME SELECT SEMICOLON STRING TABLE TO WHEREprogram : statementsstatements : statements statementstatements : statementstatement : command SEMICOLONcommand : IMPORT TABLE ID FROM STRINGcommand : EXPORT TABLE ID TO STRINGcommand : DISCARD TABLE IDcommand : RENAME TABLE ID TO IDcommand : PRINT TABLE IDcommand : CREATE TABLE ID FROM querycommand : CALL IDcommand : PROCEDURE ID BEGIN statements ENDquery : SELECT field_list FROM ID where_clause limit_clausequery : SELECT field_list FROM ID JOIN ID ON ID EQ ID where_clause limit_clausefield_list : ASTERISKfield_list : ID\n                  | ID COMMA field_listwhere_clause : where_clause : WHERE conditioncondition : ID EQUALS STRING\n                 | ID EQ STRING\n                 | ID GT STRING\n                 | ID LT STRING\n                 | ID GE STRING\n                 | ID LE STRING\n                 | ID NE STRINGlimit_clause : limit_clause : LIMIT NUMBER'
    
_lr_action_items = {'IMPORT':([0,2,3,13,14,29,34,],[5,5,-3,-2,-4,5,5,]),'EXPORT':([0,2,3,13,14,29,34,],[6,6,-3,-2,-4,6,6,]),'DISCARD':([0,2,3,13,14,29,34,],[7,7,-3,-2,-4,7,7,]),'RENAME':([0,2,3,13,14,29,34,],[8,8,-3,-2,-4,8,8,]),'PRINT':([0,2,3,13,14,29,34,],[9,9,-3,-2,-4,9,9,]),'CREATE':([0,2,3,13,14,29,34,],[10,10,-3,-2,-4,10,10,]),'CALL':([0,2,3,13,14,29,34,],[11,11,-3,-2,-4,11,11,]),'PROCEDURE':([0,2,3,13,14,29,34,],[12,12,-3,-2,-4,12,12,]),'$end':([1,2,3,13,14,],[0,-1,-3,-2,-4,]),'END':([3,13,14,34,],[-3,-2,-4,40,]),'SEMICOLON':([4,21,25,27,35,36,37,38,40,46,48,51,54,56,66,67,68,69,70,71,72,74,75,76,],[14,-11,-7,-9,-5,-6,-8,-10,-12,-18,-27,-13,-19,-28,-20,-21,-22,-23,-24,-25,-26,-18,-27,-14,]),'TABLE':([5,6,7,8,9,10,],[15,16,17,18,19,20,]),'ID':([11,12,15,16,17,18,19,20,32,39,44,45,49,50,57,73,],[21,22,23,24,25,26,27,28,37,42,46,42,53,55,65,74,]),'BEGIN':([22,],[29,]),'FROM':([23,28,41,42,43,47,],[30,33,44,-16,-15,-17,]),'TO':([24,26,],[31,32,]),'STRING':([30,31,58,59,60,61,62,63,64,],[35,36,66,67,68,69,70,71,72,]),'SELECT':([33,],[39,]),'ASTERISK':([39,45,],[43,43,]),'COMMA':([42,],[45,]),'JOIN':([46,],[49,]),'LIMIT':([46,48,54,66,67,68,69,70,71,72,74,75,],[-18,52,-19,-20,-21,-22,-23,-24,-25,-26,-18,52,]),'WHERE':([46,74,],[50,50,]),'NUMBER':([52,],[56,]),'ON':([53,],[57,]),'EQUALS':([55,],[58,]),'EQ':([55,65,],[59,73,]),'GT':([55,],[60,]),'LT':([55,],[61,]),'GE':([55,],[62,]),'LE':([55,],[63,]),'NE':([55,],[64,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statements':([0,29,],[2,34,]),'statement':([0,2,29,34,],[3,13,3,13,]),'command':([0,2,29,34,],[4,4,4,4,]),'query':([33,],[38,]),'field_list':([39,45,],[41,47,]),'where_clause':([46,74,],[48,75,]),'limit_clause':([48,75,],[51,76,]),'condition':([50,],[54,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statements','program',1,'p_program','parser.py',8),
  ('statements -> statements statement','statements',2,'p_statements_multiple','parser.py',12),
  ('statements -> statement','statements',1,'p_statements_single','parser.py',16),
  ('statement -> command SEMICOLON','statement',2,'p_statement','parser.py',20),
  ('command -> IMPORT TABLE ID FROM STRING','command',5,'p_command_import','parser.py',24),
  ('command -> EXPORT TABLE ID TO STRING','command',5,'p_command_export','parser.py',28),
  ('command -> DISCARD TABLE ID','command',3,'p_command_discard','parser.py',32),
  ('command -> RENAME TABLE ID TO ID','command',5,'p_command_rename','parser.py',36),
  ('command -> PRINT TABLE ID','command',3,'p_command_print','parser.py',40),
  ('command -> CREATE TABLE ID FROM query','command',5,'p_command_create','parser.py',44),
  ('command -> CALL ID','command',2,'p_command_call','parser.py',48),
  ('command -> PROCEDURE ID BEGIN statements END','command',5,'p_command_proc','parser.py',52),
  ('query -> SELECT field_list FROM ID where_clause limit_clause','query',6,'p_query','parser.py',56),
  ('query -> SELECT field_list FROM ID JOIN ID ON ID EQ ID where_clause limit_clause','query',12,'p_query_join','parser.py',60),
  ('field_list -> ASTERISK','field_list',1,'p_field_list_all','parser.py',64),
  ('field_list -> ID','field_list',1,'p_field_list','parser.py',68),
  ('field_list -> ID COMMA field_list','field_list',3,'p_field_list','parser.py',69),
  ('where_clause -> <empty>','where_clause',0,'p_where_clause_empty','parser.py',76),
  ('where_clause -> WHERE condition','where_clause',2,'p_where_clause_expr','parser.py',80),
  ('condition -> ID EQUALS STRING','condition',3,'p_condition','parser.py',84),
  ('condition -> ID EQ STRING','condition',3,'p_condition','parser.py',85),
  ('condition -> ID GT STRING','condition',3,'p_condition','parser.py',86),
  ('condition -> ID LT STRING','condition',3,'p_condition','parser.py',87),
  ('condition -> ID GE STRING','condition',3,'p_condition','parser.py',88),
  ('condition -> ID LE STRING','condition',3,'p_condition','parser.py',89),
  ('condition -> ID NE STRING','condition',3,'p_condition','parser.py',90),
  ('limit_clause -> <empty>','limit_clause',0,'p_limit_clause_empty','parser.py',94),
  ('limit_clause -> LIMIT NUMBER','limit_clause',2,'p_limit_clause','parser.py',98),
]
